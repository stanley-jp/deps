From 32f0bb50e0d6461a663342864a2a6ff8e3ceb66c Mon Sep 17 00:00:00 2001
From: jianpeichen <jianpeichen@autox.ai>
Date: Thu, 8 Aug 2024 17:43:11 +0800
Subject: [PATCH] patch for low delay

---
 0001-patch-for-low-delay.patch | 47 ++++++++++++++++++++++++++++++++++
 libavcodec/libsvtav1.c         | 15 +++++++----
 2 files changed, 57 insertions(+), 5 deletions(-)
 create mode 100644 0001-patch-for-low-delay.patch

diff --git a/0001-patch-for-low-delay.patch b/0001-patch-for-low-delay.patch
new file mode 100644
index 0000000..c6a3b87
--- /dev/null
+++ b/0001-patch-for-low-delay.patch
@@ -0,0 +1,47 @@
+From 85dd9c215dd4942e0f93bf5854f7607792521db3 Mon Sep 17 00:00:00 2001
+From: jianpeichen <jianpeichen@autox.ai>
+Date: Thu, 8 Aug 2024 17:43:11 +0800
+Subject: [PATCH] patch for low delay
+
+---
+ libavcodec/libsvtav1.c | 15 ++++++++++-----
+ 1 file changed, 10 insertions(+), 5 deletions(-)
+
+diff --git a/libavcodec/libsvtav1.c b/libavcodec/libsvtav1.c
+index 6648659..657a176 100644
+--- a/libavcodec/libsvtav1.c
++++ b/libavcodec/libsvtav1.c
+@@ -520,20 +520,25 @@ static int eb_receive_packet(AVCodecContext *avctx, AVPacket *pkt)
+     EbErrorType svt_ret;
+     AVBufferRef *ref;
+     int ret = 0, pict_type;
++    bool retry = false;
+ 
+     if (svt_enc->eos_flag == EOS_RECEIVED)
+         return AVERROR_EOF;
+ 
+     ret = ff_encode_get_frame(avctx, frame);
+-    if (ret < 0 && ret != AVERROR_EOF)
++    if (ret == AVERROR(EAGAIN)) {
++        retry = true;
++    } else if (ret < 0 && ret != AVERROR_EOF)
+         return ret;
+     if (ret == AVERROR_EOF)
+         frame = NULL;
+ 
+-    ret = eb_send_frame(avctx, frame);
+-    if (ret < 0)
+-        return ret;
+-    av_frame_unref(svt_enc->frame);
++    if (!retry) {
++        ret = eb_send_frame(avctx, frame);
++        if (ret < 0)
++            return ret;
++        av_frame_unref(svt_enc->frame);
++    }
+ 
+     svt_ret = svt_av1_enc_get_packet(svt_enc->svt_handle, &headerPtr, svt_enc->eos_flag);
+     if (svt_ret == EB_NoErrorEmptyQueue)
+-- 
+2.45.2
+
diff --git a/libavcodec/libsvtav1.c b/libavcodec/libsvtav1.c
index 6648659..175cb27 100644
--- a/libavcodec/libsvtav1.c
+++ b/libavcodec/libsvtav1.c
@@ -520,20 +520,25 @@ static int eb_receive_packet(AVCodecContext *avctx, AVPacket *pkt)
     EbErrorType svt_ret;
     AVBufferRef *ref;
     int ret = 0, pict_type;
+    int retry = 0;
 
     if (svt_enc->eos_flag == EOS_RECEIVED)
         return AVERROR_EOF;
 
     ret = ff_encode_get_frame(avctx, frame);
-    if (ret < 0 && ret != AVERROR_EOF)
+    if (ret == AVERROR(EAGAIN)) {
+        retry = 1;
+    } else if (ret < 0 && ret != AVERROR_EOF)
         return ret;
     if (ret == AVERROR_EOF)
         frame = NULL;
 
-    ret = eb_send_frame(avctx, frame);
-    if (ret < 0)
-        return ret;
-    av_frame_unref(svt_enc->frame);
+    if (!retry) {
+        ret = eb_send_frame(avctx, frame);
+        if (ret < 0)
+            return ret;
+        av_frame_unref(svt_enc->frame);
+    }
 
     svt_ret = svt_av1_enc_get_packet(svt_enc->svt_handle, &headerPtr, svt_enc->eos_flag);
     if (svt_ret == EB_NoErrorEmptyQueue)
-- 
2.45.2

